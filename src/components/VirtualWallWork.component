<apex:component controller="VirtualWallWork_VfExt">
	<apex:attribute name="work" type="WorkAndTasks" assignTo="{!oneWorkAndTasks}" required="true"
		description="The custom Apex class that contains the Work record and list collections of child
		Work Tasks grouped into Task Status" />

	<!-- NOTE: The underscore between taskStatus and task.id is essential for sortable.serialize -->

   	<div id="work{!work.theWork.Id}" class="row">
		<div class="cell taskInfo">
			<apex:outputLink value="/{!work.theWork.Id}" target="_parent" >
				<h2>{!work.theWork.Work_Number__c} {!work.theWork.Name}</h2>
			</apex:outputLink>
			<p>
				({!work.theWork.Owner.Alias})
			</p>
			<p>
				<apex:outputLink styleClass="newTaskLink" value="/a0o/e?CF00N60000002NaOs={!work.theWork.Name}
					&CF00N60000002NaOs_lkid={!work.theWork.Id}&retURL=/apex/VirtualWall?id={!work.theWork.Sprint__c}"
					target="_parent" >
	 				New Task
	 			</apex:outputLink>
			</p>
		</div>
		<div class="taskStatuses" >
			<div id="toDo~{!work.theWork.Id}" class="cell dropArea">
				<div id="headerToDo" class="cell headerCell" >  <h2>To Do</h2>  </div>
				<apex:repeat id="tasksToDo" value="{!work.listTasksToDo}" var="task">
		   			<div id="taskToDo_{!task.Id}" class="task" >
		   				<div class="taskTitle" > {!task.Name} </div>
		   				<div class="taskOwner">{!task.Owner.Alias}</div>
		   				<div class="taskLink" >
			   				<apex:outputLink value="/{!task.Id}/e?retURL=/apex/VirtualWall?id={!work.theWork.Sprint__c}" target="_parent" >
			   					EDIT
			   				</apex:outputLink>
		   				</div>
		   				<apex:outputText styleClass="taskRemainingHours" value="{0, number,0}">
							<apex:param value="{!task.Remaining_Hours__c}" />
						</apex:outputText>
	   				</div>
		    	</apex:repeat>
			</div>
			<div id="doing~{!work.theWork.Id}" class="cell dropArea">
				<div id="headerInProgress" class="cell headerCell" >  <h2>In Progress</h2>  </div>
				<apex:repeat id="tasksDoing" value="{!work.listTasksDoing}" var="task">
		   			<div id="taskDoing_{!task.Id}" class="task" >
						<div class="taskTitle" > {!task.Name} </div>
		   				<div class="taskOwner">{!task.Owner.Alias}</div>
		   				<div class="taskLink" >
			   				<apex:outputLink value="/{!task.Id}/e?retURL=/apex/VirtualWall?id={!work.theWork.Sprint__c}" target="_parent" >
			   					EDIT
			   				</apex:outputLink>
		   				</div>
		   				<apex:outputText styleClass="taskRemainingHours" value="{0, number,0}">
							<apex:param value="{!task.Remaining_Hours__c}" />
						</apex:outputText>
	   				</div>
		    	</apex:repeat>
			</div>
			<div id="verify~{!work.theWork.Id}" class="cell dropArea">
				<div id="headerVerify" class="cell headerCell" >  <h2>Verify</h2>  </div>
				<apex:repeat id="tasksVerify" value="{!work.listTasksVerify}" var="task">
		   			<div id="taskVerify_{!task.Id}" class="task" >
		   				<div class="taskTitle" > {!task.Name} </div>
		   				<div class="taskOwner">{!task.Owner.Alias}</div>
		   				<div class="taskLink" >
			   				<apex:outputLink value="/{!task.Id}/e?retURL=/apex/VirtualWall?id={!work.theWork.Sprint__c}" target="_parent" >
			   					EDIT
			   				</apex:outputLink>
		   				</div>
		   				<apex:outputText styleClass="taskRemainingHours" value="{0, number,0}">
							<apex:param value="{!task.Remaining_Hours__c}" />
						</apex:outputText>
	   				</div>
		    	</apex:repeat>
			</div>
			<div id="done~{!work.theWork.Id}" class="cell dropArea">
				<div id="headerDone" class="cell headerCell" >  <h2>Done</h2>  </div>
				<apex:repeat id="tasksDone" value="{!work.listTasksDone}" var="task">
		   			<div id="taskDone_{!task.Id}" class="task" >
		   				<div class="taskTitle" > {!task.Name} </div>
		   				<div class="taskOwner">{!task.Owner.Alias}</div>
		   				<div class="taskLink" >
			   				<apex:outputLink value="/{!task.Id}/e?retURL=/apex/VirtualWall?id={!work.theWork.Sprint__c}" target="_parent" >
			   					EDIT
			   				</apex:outputLink>
		   				</div>
		   				<apex:outputText styleClass="taskRemainingHours" value="{0, number,0}">
							<apex:param value="{!task.Remaining_Hours__c}" />
						</apex:outputText>
	   				</div>
		    	</apex:repeat>
			</div>
		</div>
	</div>

	<script type="text/javascript">
	// <![CDATA[
		var sections = ['toDo~{!work.theWork.Id}', 'doing~{!work.theWork.Id}',
			'verify~{!work.theWork.Id}', 'done~{!work.theWork.Id}'];

		sections.each(function (id) {
			Sortable.create(id, { 	tag: 'div', only: 'task', constraint: false, hoverclass: 'hoverActive',
									dropOnEmpty: true, containment: sections, overlap: 'horizontal',
									onUpdate: updateRecord}
			);
		});
	// ]]>
	</script>
</apex:component>