<apex:page standardController="Work_Task__c" extensions="VirtualWall_VfExt" >
	<apex:include pagename="VirtualWallCss" />

	<article>
	    <apex:outputPanel id="container" layout="block">
	    
	    	<div id="bin" layout="block" >BIN BIN BIN BIN BIN</div>
	    
	    	<apex:outputPanel id="scrum-header" layout="block" styleClass="headerRow">
				<apex:outputPanel id="header-stories" layout="block" styleclass="cell" >Work</apex:outputPanel>
				<apex:outputPanel id="header-toDo" layout="block" styleclass="cell" >To Do</apex:outputPanel>
				<apex:outputPanel id="header-inProgress" layout="block" styleclass="cell" >In Progress</apex:outputPanel>
				<apex:outputPanel id="header-verify" layout="block" styleclass="cell" >Verify</apex:outputPanel>
				<apex:outputPanel id="header-done" layout="block" styleclass="cell" >Done</apex:outputPanel>
			</apex:outputPanel>
		    <apex:repeat id="works" value="{!listWorkAndTasks}" var="workAndTasks">
		    	<c:VirtualWallWork work="{!workAndTasks}" />
		    </apex:repeat>
		</apex:outputPanel>
	</article>

	<script>

	document.getElementsByClassName = function(cl) {
		var retnode = [];
		var myclass = new RegExp('\\b'+cl+'\\b');
		var elem = this.getElementsByTagName('*');
		for (var i = 0; i < elem.length; i++) {
			var classes = elem[i].className;
			if (myclass.test(classes)) retnode.push(elem[i]);
		}
		return retnode;
	};

	var draggables = document.getElementsByClassName('draggable'), dragEl = null;
	for (var i = 0; i < draggables.length; i++) {
	    dragEl = draggables[i];
	  
	    addEvent(dragEl, 'dragstart', function (e) {
			e.dataTransfer.effectAllowed = 'copy'; // only dropEffect='copy' will be dropable
			e.dataTransfer.setData('Text', this.id); // required otherwise doesn't work
	    });
	}
	var dropzones = document.getElementsByClassName('dropzone'), dropEl = null;
	for (var i = 0; i < dropzones.length; i++) {
	    dropEl = dropzones[i];
	  
		addEvent(dropEl, 'dragover', function (e) {
			if (e.preventDefault) e.preventDefault(); // allows us to drop
			this.className = 'over';
			e.dataTransfer.dropEffect = 'copy';
			return false;
		});
		
		// to get IE to work
		addEvent(dropEl, 'dragenter', function (e) {
			this.className = 'over';
			return false;
		});
		
		addEvent(dropEl, 'dragleave', function () {
			this.className = '';
		});
		
		addEvent(dropEl, 'drop', function (e) {
		if (e.stopPropagation) e.stopPropagation(); // stops the browser from redirecting...why???
			var el = document.getElementById(e.dataTransfer.getData('Text'));
			el.parentNode.removeChild(el);	
			return false;
		});
	}

	</script>
</apex:page>